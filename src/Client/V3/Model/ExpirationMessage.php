<?php declare(strict_types=1);
/*
 * FACT-Finder REST API Client
 * Copyright Â© webweit GmbH (https://www.webweit.de)
 */

/**
 * FACT-Finder REST-API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V3
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.9
 */

namespace Web\FactFinderApi\Client\V3\Model;

use Web\FactFinderApi\Client\Model\BaseModel;

/**
 * ExpirationMessage Class Doc Comment
 *
 * @author   Swagger Codegen team
 *
 * @see     https://github.com/swagger-api/swagger-codegen
 */
class ExpirationMessage extends BaseModel
{
    /**
     * The original name of the model.
     *
     * @var string
     */
    protected static $swaggerModelName = 'ExpirationMessage';

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @var string[]
     */
    protected static $swaggerTypes = [
        'channel' => 'string',
        'expiration_data' => '\Web\FactFinderApi\Client\V3\Model\ExpirationData[]',
    ];

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     */
    protected static $swaggerFormats = [
        'channel' => null,
        'expiration_data' => null,
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'channel' => 'channel',
        'expiration_data' => 'expirationData',
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'channel' => 'setChannel',
        'expiration_data' => 'setExpirationData',
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'channel' => 'getChannel',
        'expiration_data' => 'getExpirationData',
    ];

    /**
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(?array $data = null)
    {
        $this->container['channel'] = $data['channel'] ?? null;
        $this->container['expiration_data'] = $data['expiration_data'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties(): array
    {
        $invalidProperties = [];

        if ($this->container['channel'] === null) {
            $invalidProperties[] = "'channel' can't be null";
        }
        if ($this->container['expiration_data'] === null) {
            $invalidProperties[] = "'expiration_data' can't be null";
        }

        return $invalidProperties;
    }

    /**
     * @return string
     */
    public function getChannel()
    {
        return $this->container['channel'];
    }

    /**
     * @param string $channel name of the channel
     *
     * @return $this
     */
    public function setChannel($channel)
    {
        $this->container['channel'] = $channel;

        return $this;
    }

    /**
     * @return \Web\FactFinderApi\Client\V3\Model\ExpirationData[]
     */
    public function getExpirationData()
    {
        return $this->container['expiration_data'];
    }

    /**
     * @param \Web\FactFinderApi\Client\V3\Model\ExpirationData[] $expiration_data the expiration status of the database
     *
     * @return $this
     */
    public function setExpirationData($expiration_data)
    {
        $this->container['expiration_data'] = $expiration_data;

        return $this;
    }
}
