<?php declare(strict_types=1);
/*
 * FACT-Finder REST API Client
 * Copyright Â© webweit GmbH (https://www.webweit.de)
 */

/**
 * FACT-Finder REST-API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.9
 */

namespace Web\FactFinderApi\Client\V1\Model;

use Web\FactFinderApi\Client\Model\SortItemBase;

/**
 * SortItem Class Doc Comment
 *
 * @author   Swagger Codegen team
 *
 * @see     https://github.com/swagger-api/swagger-codegen
 */
class SortItem extends SortItemBase implements ModelV1Interface
{
    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @var string[]
     */
    public static function swaggerTypes(): array
    {
        return [
            'description' => 'string',
            'name' => 'string',
            'order' => 'string',
            'relevance_sort_item' => 'bool',
        ];
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    public static function attributeMap(): array
    {
        return [
            'description' => 'description',
            'name' => 'name',
            'order' => 'order',
            'relevance_sort_item' => 'relevanceSortItem',
        ];
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties(): array
    {
        $invalidProperties = parent::listInvalidProperties();

        if ($this->container['description'] === null) {
            $invalidProperties[] = "'description' can't be null";
        }

        return $invalidProperties;
    }

    /**
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * @return bool
     */
    public function getRelevanceSortItem()
    {
        return $this->container['relevance_sort_item'];
    }

    /**
     * @param bool $relevance_sort_item relevance_sort_item
     *
     * @return $this
     */
    public function setRelevanceSortItem($relevance_sort_item)
    {
        $this->container['relevance_sort_item'] = $relevance_sort_item;

        return $this;
    }
}
