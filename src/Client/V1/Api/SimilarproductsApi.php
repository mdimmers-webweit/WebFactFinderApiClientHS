<?php declare(strict_types=1);
/*
 * FACT-Finder REST API Client
 * Copyright Â© webweit GmbH (https://www.webweit.de)
 */

/**
 * FACT-Finder REST-API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.9
 */

namespace Web\FactFinderApi\Client\V1\Api;

use GuzzleHttp6\Client;
use GuzzleHttp6\Psr7\Request;
use GuzzleHttp6\RequestOptions;
use Web\FactFinderApi\Client\Configuration;
use Web\FactFinderApi\Client\ObjectSerializer;

/**
 * SimilarproductsApi Class Doc Comment
 *
 * @author   Swagger Codegen team
 *
 * @see     https://github.com/swagger-api/swagger-codegen
 */
class SimilarproductsApi extends ApiClient
{
    /**
     * Operation getSimilarProductsUsingGET
     *
     * Get similar products
     *
     * @param string $channel     channel (required)
     * @param string $id          Use this parameter to pass the product ID for which you wish to obtain similar products. (required)
     * @param bool   $ids_only    If the value true is passed, then only the record IDs will be returned, streamlining the results. If you do not need the other information in the results, this will help you to improve performance. (optional, default to false)
     * @param int    $max_results Use this parameter to specify the number of recommendations you would like. The default value from the configuration is used if the parameter is not specified. (optional, default to 10)
     *
     * @throws \Web\FactFinderApi\Client\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     *
     * @return \Web\FactFinderApi\Client\V1\Model\SimilarProducts
     */
    public function getSimilarProductsUsingGET($channel, $id, $ids_only = 'false', $max_results = '10')
    {
        list($response) = $this->getSimilarProductsUsingGETWithHttpInfo($channel, $id, $ids_only, $max_results);

        return $response;
    }

    /**
     * Operation getSimilarProductsUsingGETWithHttpInfo
     *
     * Get similar products
     *
     * @param string $channel     channel (required)
     * @param string $id          Use this parameter to pass the product ID for which you wish to obtain similar products. (required)
     * @param bool   $ids_only    If the value true is passed, then only the record IDs will be returned, streamlining the results. If you do not need the other information in the results, this will help you to improve performance. (optional, default to false)
     * @param int    $max_results Use this parameter to specify the number of recommendations you would like. The default value from the configuration is used if the parameter is not specified. (optional, default to 10)
     *
     * @throws \Web\FactFinderApi\Client\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     *
     * @return array of \Web\FactFinderApi\Client\V1\Model\SimilarProducts, HTTP status code, HTTP response headers (array of strings)
     */
    public function getSimilarProductsUsingGETWithHttpInfo($channel, $id, $ids_only = 'false', $max_results = '10')
    {
        $returnType = '\Web\FactFinderApi\Client\V1\Model\SimilarProducts';
        $request = $this->getSimilarProductsUsingGETRequest($channel, $id, $ids_only, $max_results);

        return $this->executeRequest($request, $returnType);
    }

    /**
     * Operation getSimilarProductsUsingGETAsync
     *
     * Get similar products
     *
     * @param string $channel     channel (required)
     * @param string $id          Use this parameter to pass the product ID for which you wish to obtain similar products. (required)
     * @param bool   $ids_only    If the value true is passed, then only the record IDs will be returned, streamlining the results. If you do not need the other information in the results, this will help you to improve performance. (optional, default to false)
     * @param int    $max_results Use this parameter to specify the number of recommendations you would like. The default value from the configuration is used if the parameter is not specified. (optional, default to 10)
     *
     * @throws \InvalidArgumentException
     *
     * @return \GuzzleHttp6\Promise\PromiseInterface
     */
    public function getSimilarProductsUsingGETAsync($channel, $id, $ids_only = 'false', $max_results = '10')
    {
        return $this->getSimilarProductsUsingGETAsyncWithHttpInfo($channel, $id, $ids_only, $max_results)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation getSimilarProductsUsingGETAsyncWithHttpInfo
     *
     * Get similar products
     *
     * @param string $channel     channel (required)
     * @param string $id          Use this parameter to pass the product ID for which you wish to obtain similar products. (required)
     * @param bool   $ids_only    If the value true is passed, then only the record IDs will be returned, streamlining the results. If you do not need the other information in the results, this will help you to improve performance. (optional, default to false)
     * @param int    $max_results Use this parameter to specify the number of recommendations you would like. The default value from the configuration is used if the parameter is not specified. (optional, default to 10)
     *
     * @throws \InvalidArgumentException
     *
     * @return \GuzzleHttp6\Promise\PromiseInterface
     */
    public function getSimilarProductsUsingGETAsyncWithHttpInfo($channel, $id, $ids_only = 'false', $max_results = '10')
    {
        $returnType = '\Web\FactFinderApi\Client\V1\Model\SimilarProducts';
        $request = $this->getSimilarProductsUsingGETRequest($channel, $id, $ids_only, $max_results);

        return $this->executeAsyncRequest($request, $returnType);
    }

    /**
     * Create request for operation 'getSimilarProductsUsingGET'
     *
     * @param string $channel     channel (required)
     * @param string $id          Use this parameter to pass the product ID for which you wish to obtain similar products. (required)
     * @param bool   $ids_only    If the value true is passed, then only the record IDs will be returned, streamlining the results. If you do not need the other information in the results, this will help you to improve performance. (optional, default to false)
     * @param int    $max_results Use this parameter to specify the number of recommendations you would like. The default value from the configuration is used if the parameter is not specified. (optional, default to 10)
     *
     * @throws \InvalidArgumentException
     *
     * @return \GuzzleHttp6\Psr7\Request
     */
    protected function getSimilarProductsUsingGETRequest($channel, $id, $ids_only = 'false', $max_results = '10')
    {
        // verify the required parameter 'channel' is set
        if ($channel === null || (\is_array($channel) && \count($channel) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $channel when calling getSimilarProductsUsingGET'
            );
        }
        // verify the required parameter 'id' is set
        if ($id === null || (\is_array($id) && \count($id) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $id when calling getSimilarProductsUsingGET'
            );
        }

        $resourcePath = '/v1/similarproducts/{channel}';
        $queryParams = [];
        $httpBody = '';
        // query params
        if ($id !== null) {
            $queryParams['id'] = ObjectSerializer::toQueryValue($id);
        }
        // query params
        if ($ids_only !== null) {
            $queryParams['idsOnly'] = ObjectSerializer::toQueryValue($ids_only);
        }
        // query params
        if ($max_results !== null) {
            $queryParams['maxResults'] = ObjectSerializer::toQueryValue($max_results);
        }

        // path params
        if ($channel !== null) {
            $resourcePath = \str_replace(
                '{channel}',
                ObjectSerializer::toPathValue($channel),
                $resourcePath
            );
        }

        return $this->getQuery($resourcePath, $queryParams);
    }

    /**
     * Create http client option
     *
     * @throws \RuntimeException on file opening failure
     *
     * @return array of http client options
     */
    protected function createHttpClientOption()
    {
        $options = [];
        if ($this->config->getDebug()) {
            $options[RequestOptions::DEBUG] = \fopen($this->config->getDebugFile(), 'a');
            if (!$options[RequestOptions::DEBUG]) {
                throw new \RuntimeException('Failed to open the debug file: ' . $this->config->getDebugFile());
            }
        }

        return $options;
    }
}
