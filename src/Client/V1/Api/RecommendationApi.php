<?php declare(strict_types=1);
/*
 * FACT-Finder REST API Client
 * Copyright Â© webweit GmbH (https://www.webweit.de)
 */

/**
 * FACT-Finder REST-API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.9
 */

namespace Web\FactFinderApi\Client\V1\Api;

use GuzzleHttp6\Psr7\Request;
use Web\FactFinderApi\Client\Configuration;
use Web\FactFinderApi\Client\ObjectSerializer;

/**
 * RecommendationApi Class Doc Comment
 *
 * @author   Swagger Codegen team
 *
 * @see     https://github.com/swagger-api/swagger-codegen
 */
class RecommendationApi extends ApiClient
{
    /**
     * Operation getRecommendationUsingGET
     *
     * @param string   $channel             channel (required)
     * @param string[] $id                  Use this parameter to pass product ID(s) for which you wish to obtain recommendations. (required)
     * @param int      $max_results         Use this parameter to specify the number of recommendations you would like. The default value from the configuration is used if the parameter is not specified. (optional, default to 0)
     * @param string   $sid                 This parameter is used to pass an id for the user session. This is important for recognising the user, if you want to give him personalised recommendations, as well as for FACT-Finder tracking. (optional)
     * @param bool     $ids_only            If the value true is passed, then only the record IDs will be returned, streamlining the results. If you do not need the other information in the results, this will help you to improve performance. (optional, default to false)
     * @param bool     $use_personalization Allows the activation/deactivation of the personalization of queries. true &#x3D; the search result will be personalized if the personalization module is activated and all other requirements are met; false &#x3D; the search result will not be personalized. (optional, default to true)
     *
     * @throws \Web\FactFinderApi\Client\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     *
     * @return \Web\FactFinderApi\Client\V1\Model\RecommendationResult
     */
    public function getRecommendationUsingGET(string $channel, $id, int $max_results = 0, $sid = null, bool $ids_only = false, bool $use_personalization = true)
    {
        list($response) = $this->getRecommendationUsingGETWithHttpInfo($channel, $id, $max_results, $sid, $ids_only, $use_personalization);

        return $response;
    }

    /**
     * Operation getRecommendationUsingGETWithHttpInfo
     *
     * @param string   $channel             channel (required)
     * @param string[] $id                  Use this parameter to pass product ID(s) for which you wish to obtain recommendations. (required)
     * @param int      $max_results         Use this parameter to specify the number of recommendations you would like. The default value from the configuration is used if the parameter is not specified. (optional, default to 0)
     * @param string   $sid                 This parameter is used to pass an id for the user session. This is important for recognising the user, if you want to give him personalised recommendations, as well as for FACT-Finder tracking. (optional)
     * @param bool     $ids_only            If the value true is passed, then only the record IDs will be returned, streamlining the results. If you do not need the other information in the results, this will help you to improve performance. (optional, default to false)
     * @param bool     $use_personalization Allows the activation/deactivation of the personalization of queries. true &#x3D; the search result will be personalized if the personalization module is activated and all other requirements are met; false &#x3D; the search result will not be personalized. (optional, default to true)
     *
     * @throws \Web\FactFinderApi\Client\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     *
     * @return array of \Web\FactFinderApi\Client\V1\Model\RecommendationResult, HTTP status code, HTTP response headers (array of strings)
     */
    public function getRecommendationUsingGETWithHttpInfo(string $channel, $id, int $max_results = 0, $sid = null, bool $ids_only = false, bool $use_personalization = true)
    {
        $request = $this->getRecommendationUsingGETRequest($channel, $id, $max_results, $sid, $ids_only, $use_personalization);

        return $this->executeRequest($request, \Web\FactFinderApi\Client\V1\Model\RecommendationResult::class);
    }

    /**
     * Operation getRecommendationUsingGETAsync
     *
     * @param string   $channel             channel (required)
     * @param string[] $id                  Use this parameter to pass product ID(s) for which you wish to obtain recommendations. (required)
     * @param int      $max_results         Use this parameter to specify the number of recommendations you would like. The default value from the configuration is used if the parameter is not specified. (optional, default to 0)
     * @param string   $sid                 This parameter is used to pass an id for the user session. This is important for recognising the user, if you want to give him personalised recommendations, as well as for FACT-Finder tracking. (optional)
     * @param bool     $ids_only            If the value true is passed, then only the record IDs will be returned, streamlining the results. If you do not need the other information in the results, this will help you to improve performance. (optional, default to false)
     * @param bool     $use_personalization Allows the activation/deactivation of the personalization of queries. true &#x3D; the search result will be personalized if the personalization module is activated and all other requirements are met; false &#x3D; the search result will not be personalized. (optional, default to true)
     *
     * @throws \InvalidArgumentException
     *
     * @return \GuzzleHttp6\Promise\PromiseInterface
     */
    public function getRecommendationUsingGETAsync(string $channel, $id, int $max_results = 0, $sid = null, bool $ids_only = false, bool $use_personalization = true)
    {
        return $this->getRecommendationUsingGETAsyncWithHttpInfo($channel, $id, $max_results, $sid, $ids_only, $use_personalization)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation getRecommendationUsingGETAsyncWithHttpInfo
     *
     * @param string   $channel             channel (required)
     * @param string[] $id                  Use this parameter to pass product ID(s) for which you wish to obtain recommendations. (required)
     * @param int      $max_results         Use this parameter to specify the number of recommendations you would like. The default value from the configuration is used if the parameter is not specified. (optional, default to 0)
     * @param string   $sid                 This parameter is used to pass an id for the user session. This is important for recognising the user, if you want to give him personalised recommendations, as well as for FACT-Finder tracking. (optional)
     * @param bool     $ids_only            If the value true is passed, then only the record IDs will be returned, streamlining the results. If you do not need the other information in the results, this will help you to improve performance. (optional, default to false)
     * @param bool     $use_personalization Allows the activation/deactivation of the personalization of queries. true &#x3D; the search result will be personalized if the personalization module is activated and all other requirements are met; false &#x3D; the search result will not be personalized. (optional, default to true)
     *
     * @throws \InvalidArgumentException
     *
     * @return \GuzzleHttp6\Promise\PromiseInterface
     */
    public function getRecommendationUsingGETAsyncWithHttpInfo(string $channel, $id, int $max_results = 0, $sid = null, bool $ids_only = false, bool $use_personalization = true)
    {
        $request = $this->getRecommendationUsingGETRequest($channel, $id, $max_results, $sid, $ids_only, $use_personalization);

        return $this->executeAsyncRequest($request, \Web\FactFinderApi\Client\V1\Model\RecommendationResult::class);
    }

    /**
     * Create request for operation 'getRecommendationUsingGET'
     *
     * @param string   $channel             channel (required)
     * @param string[] $id                  Use this parameter to pass product ID(s) for which you wish to obtain recommendations. (required)
     * @param int      $max_results         Use this parameter to specify the number of recommendations you would like. The default value from the configuration is used if the parameter is not specified. (optional, default to 0)
     * @param string   $sid                 This parameter is used to pass an id for the user session. This is important for recognising the user, if you want to give him personalised recommendations, as well as for FACT-Finder tracking. (optional)
     * @param bool     $ids_only            If the value true is passed, then only the record IDs will be returned, streamlining the results. If you do not need the other information in the results, this will help you to improve performance. (optional, default to false)
     * @param bool     $use_personalization Allows the activation/deactivation of the personalization of queries. true &#x3D; the search result will be personalized if the personalization module is activated and all other requirements are met; false &#x3D; the search result will not be personalized. (optional, default to true)
     *
     * @throws \InvalidArgumentException
     *
     * @return \GuzzleHttp6\Psr7\Request
     */
    protected function getRecommendationUsingGETRequest(string $channel, $id, int $max_results = 0, $sid = null, bool $ids_only = false, bool $use_personalization = true)
    {
        // verify the required parameter 'channel' is set
        if ($channel === null || (\is_array($channel) && \count($channel) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $channel when calling getRecommendationUsingGET'
            );
        }
        // verify the required parameter 'id' is set
        if ($id === null || (\is_array($id) && \count($id) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $id when calling getRecommendationUsingGET'
            );
        }

        $resourcePath = '/v1/recommendation/{channel}';
        $queryParams = [];
        $httpBody = '';
        // query params
        if (\is_array($id)) {
            $queryParams['id'] = $id;
        } elseif ($id !== null) {
            $queryParams['id'] = ObjectSerializer::toQueryValue($id);
        }
        // query params
        if ($max_results !== null) {
            $queryParams['maxResults'] = ObjectSerializer::toQueryValue($max_results);
        }
        // query params
        if ($sid !== null) {
            $queryParams['sid'] = ObjectSerializer::toQueryValue($sid);
        }
        // query params
        if ($ids_only !== null) {
            $queryParams['idsOnly'] = ObjectSerializer::toQueryValue($ids_only);
        }
        // query params
        if ($use_personalization !== null) {
            $queryParams['usePersonalization'] = ObjectSerializer::toQueryValue($use_personalization);
        }

        // path params
        $resourcePath = $this->addChannelToResourcePath($channel, $resourcePath);

        return $this->getQuery($resourcePath, $queryParams);
    }
}
